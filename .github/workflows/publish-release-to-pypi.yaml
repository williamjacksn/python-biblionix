name: Publish the release package to PyPI

on:
  release:
    types:
      - published

jobs:

  publish:
    name: Publish the release package to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi-release
      url: https://pypi.org/p/biblionix
    permissions:
      id-token: write
    steps:

      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Build the package
        run: docker compose run --no-TTY --user="$(id -u):$(id -g)" py-build

      - name: Publish the package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Get file names
        id: files
        run: |
          echo "sdist=$(cd dist && ls *.gz)" >> $GITHUB_OUTPUT
          echo "wheel=$(cd dist && ls *.whl)" >> $GITHUB_OUTPUT

      - name: Upload sdist to release
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('node:fs/promises');
            const data = await fs.readFile('${{ github.workspace }}/dist/${{ steps.files.outputs.sdist }}');
            const repository = '${{ github.repository }}';
            await github.rest.repos.uploadReleaseAsset({
              owner: '${{ github.repository_owner }}',
              repo: repository.split('/')[1],
              release_id: '${{ github.event.release.id }}',
              name: '${{ steps.files.outputs.sdist }}',
              data: data
            });

      - name: Upload wheel to release
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('node:fs/promises');
            const data = await fs.readFile('${{ github.workspace }}/dist/${{ steps.files.outputs.wheel }}');
            const repository = '${{ github.repository }}';
            await github.rest.repos.uploadReleaseAsset({
              owner: '${{ github.repository_owner }}',
              repo: repository.split('/')[1],
              release_id: '${{ github.event.release.id }}',
              name: '${{ steps.files.outputs.wheel }}',
              data: data
            });
